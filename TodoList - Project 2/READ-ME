Spring Boot Project 2 - Todo List
This is a Spring Boot project developed using Spring Boot 3, Spring 6, and Java 21 APIs. The project implements a simple todo list application allowing users to manage their tasks through CRUD (Create, Read, Update, Delete) operations.

Features
CRUD Operations: Users can perform CRUD operations on tasks, including creating new tasks, reading existing tasks, updating task details, and deleting tasks.
Validation: Input data is validated to ensure that task descriptions are not blank.
RESTful API: The application follows RESTful principles, providing a clean and intuitive API for interacting with tasks.
Persistence with JPA: Task data is persisted in a database using Spring Data JPA, allowing for efficient storage and retrieval.
In-memory Database: For starters, the application uses an in-memory H2 database, simplifying setup and configuration.
Prerequisites
Before running the application, ensure you have the following prerequisites installed:

-Java Development Kit (JDK) 21 or later
-Apache Maven or Gradle
-Postman or any API testing tool (optional)


Running the Application
To run the application, follow these steps:

Clone the repository to your local machine.

Navigate to the project directory.

Open a terminal or command prompt.

Run the following command to start the application:
./gradlew bootRun

Once the application is running, you can access it at http://localhost:8080.

API Endpoints
The following endpoints are available in the API:

GET /api/todos: Retrieve a list of all tasks.
GET /api/todos/{id}: Retrieve details of a specific task by ID.
POST /api/todos: Create a new task.
PUT /api/todos/{id}: Update details of a specific task.
DELETE /api/todos/{id}: Delete a specific task.

Testing the API
You can test the API using Postman or any other API testing tool. Send requests to the API endpoints mentioned above to interact with the todo list application.